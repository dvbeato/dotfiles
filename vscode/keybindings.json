[
  {
    "key": "escape",
    "command": "-calva.clearInlineResults"
  },
  {
    "key": "shift+escape",
    "command": "calva.clearInlineResults",
    "when": "editorTextFocus && !editorHasMultipleSelections && !editorReadOnly && !hasOtherSuggestions && !suggestWidgetVisible && editorLangId == 'clojure'"
  },
  {
    "key": "ctrl+shift+f9",
    "command": "calva.jackIn"
  },
  {
    "key": "ctrl+alt+c ctrl+alt+j",
    "command": "-calva.jackIn"
  },
  {
    "key": "ctrl+alt+c ctrl+alt+n",
    "command": "-calva.loadNamespace",
    "when": "calva:connected"
  },
  {
    "key": "ctrl+shift+l",
    "command": "calva.loadNamespace",
    "when": "calva:connected"
  },
  {
    "key": "shift+alt+p",
    "command": "calva.evaluateSelection",
    "when": "calva:connected"
  },
  {
    "key": "ctrl+alt+c e",
    "command": "-calva.evaluateSelection",
    "when": "calva:connected"
  },
  {
    "key": "shift+alt+h",
    "command": "-references-view.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider"
  },
  {
    "key": "shift+alt+h",
    "command": "-gitlens.showQuickRepoHistory",
    "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.toggleCallHierarchy",
    "when": "callHierarchyVisible"
  },
  {
    "key": "shift+alt+h",
    "command": "paredit.barfSexpForward",
    "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
  },
  {
    "key": "ctrl+left",
    "command": "-paredit.barfSexpForward",
    "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
  },
  {
    "key": "shift+alt+l",
    "command": "paredit.slurpSexpForward",
    "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
  },
  {
    "key": "ctrl+right",
    "command": "-paredit.slurpSexpForward",
    "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
  },
  {
    "key": "alt+[Quote]",
    "command": "paredit.raiseSexp",
    "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
  },
  {
    "key": "ctrl+alt+p ctrl+alt+r",
    "command": "-paredit.raiseSexp",
    "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
  },
  {
    "key": "ctrl+w",
    "command": "-paredit.sexpRangeExpansion",
    "when": "calva:replWindowActive || editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "-paredit.sexpRangeExpansion",
    "when": "calva:keybindingsEnabled && editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  }
]

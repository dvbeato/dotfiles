

#source "$HOME/.dotfiles/zsh/pluggins/z/z.plugin.zsh"
#
## AUTOCOMPLETION
#
## initialize autocompletion
#autoload -U compinit
#compinit
#
## history setup
#setopt SHARE_HISTORY
#HISTFILE=$HOME/.zhistory
#SAVEHIST=1000
#HISTSIZE=999
#setopt HIST_EXPIRE_DUPS_FIRST
#
## autocompletion using arrow keys (based on history)
#bindkey '\e[A' history-search-backward
#bindkey '\e[B' history-search-forward
#
#setopt PROMPT_SUBST
#
#color="%(?.green.red)"
#
#function _fg_color() {
#  local color=$1
#  local text=$2
#  echo "%F{$color}$text%f"
#}
#
#function _bg_color() {
#  local color=$1
#  local text=$2
#  echo "%K{$color}$text%k"
#}
#
#function _git_branch() {
#  branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
#  echo "%F{cyan}($branch)%f"
#}
#
#os_logo=""
#bg_color="$color"
#fg_color="black"
#timefmt="%*"
#hostname="%m"
#separator="$(_fg_color "$color" '')"
#timestr="%K{$bg_color}%F{$fg_color} $timefmt %f%k"
#
#init="%F{$color}$%f"
#nl=$'\n'
#
#timestatus="%*"
#
#prompt='$timestr %~ $(_git_branch)$nl$init '

export LANG=en_US.UTF-8

export GPG_TTY=$(tty)

# oh-my-zsh
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="robbyrussell"
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

plugins=(git zsh-autosuggestions z)

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#39393f"

source $ZSH/oh-my-zsh.sh

# User configuration

[[ -z $TMUX ]] && tmux

# Mac only
#
 if [[ "$OSTYPE" == "darwin"* ]]; then
   alias ls='ls -aG'
   alias ll='ls -lhapG'

   eval $(/opt/homebrew/bin/brew shellenv)

   alias emacs='open -a Emacs'
   alias idea='open -a "IntelliJ IDEA CE"'

   # Android Setup
   export ANDROID_HOME="$HOME/Library/Android/sdk"
   export PATH=$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH

   export JAVA_HOME=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/
   export PATH="$JAVA_HOME/bin:$PATH"
 fi

# LINUX only
if [[ "$OSTYPE" == "linux-gnu" ]]; then
  alias ls='ls --color=auto'
  alias ll='ls -lhapG' 
  alias pbcopy='xclip -selection clipboard'
  alias pbpaste='xclip -selection clipboard -o'
  alias open='xdg-open'

  export JAVA_HOME="/usr/lib/jvm/default/java-1.17.0-openjdk-amd64"

  export APPS_HOME=$HOME/Applications
  export BREW="/home/linuxbrew/.linuxbrew/bin"
  export PIP_HOME="$HOME/.local/bin"
  export PATH="$JAVA_HOME/bin:$BREW:$PIP_HOME:$PATH"
fi

[[ -s "$HOME/.z.sh" ]] && source $HOME/.z.sh
[[ -s "$HOME/.env" ]] && source "$HOME/.env"

export EDITOR='vim'
export VISUAL=vim

alias g='git'
alias ga='g add'
alias gl='g log'
alias gs='g status'
alias gpl='g pull'
alias gps='g push'
alias gc='g commit -am'
alias gck='g checkout'
alias gdf='g diff'
alias gdfn='df --name-only'
alias gunstage='g reset HEAD -- '

# utils
alias pong='ping www.google.com'
alias myip="ifconfig | grep 'inet ' | cut -d ' ' -f2 | grep -v '127.0.0.1'"


if [ -x "$(command -v nvim)" ]; then
  alias vim=nvim
fi

export DEVHOME="$HOME/Development"

# GOLANG
export GOPATH="$DEVHOME/projects/go"
export PATH="$PATH:$GOPATH/bin"

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#
#[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
#
#[[ -s "$DEVHOME/sdks/flutter" ]] && export PATH="$PATH:$DEVHOME/sdks/flutter/bin"
#
## zsh-syntax-highlighting
#[[ -s "$HOME/.zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]] && source $HOME/.zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#[[ -s "/usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]] && source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#[[ -s "$HOME/.asdf/asdf.sh" ]] && . $HOME/.asdf/asdf.sh
## [[ -s "$HOME/.asdf/completations/asdf.bash" ]] && . $HOME/.asdf/completations/asdf.bash
#
## Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
#export PATH="$PATH:$HOME/.rvm/bin"
#
##THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
#export SDKMAN_DIR="$HOME/.sdkman"
#[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
#
#[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
#
#[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
#  alias vim='nvim'
#fi
#

# eval "$(starship init zsh)"
